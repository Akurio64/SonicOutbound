<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miniboss_3_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000002</depth>
  <persistent>0</persistent>
  <parentName>par_boss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
hurt_sprite=spr_miniboss_3_2
main_sprite=spr_miniboss_3_1
dead_sprite=spr_miniboss_3_3
act_clear=_ev_act_clear
ctr_audio.act_clear=act_clear
theme=_ev_miniboss
i_speed=0.3

//Boss variables
move=false
start=false
dir=1
hp=6
spe=0
sound=0
alarm[0]=1
instance_create(x,y,obj_miniboss_3_solid)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

ww = sprite_get_width(sprite_index); //we need to know how wide

hh = sprite_get_height(sprite_index); //and how tall our sprite is

chunk = ww/3; //this is how big your chunks will be in pixels

for (i=0;i&lt;ww;i+=chunk) { //we loop 4 pixel at a time all the way across
 for (j=0;j&lt;hh;j+=chunk) { //while picking all the vertical pixels in each column
 particle = instance_create(x-(ww/2)+i,y-(hh/2)+j,obj_miniboss_part); //we create a particle relative to the object, offset by the proper amount
 particle.spr = sprite_index; //we need to tell the particle which sprite to draw. in this case, it's drawing the sprite of the object that's creating it
 particle.size = chunk;
 particle.xx = i; //we'll need the particles to have these values so they can draw the right part of the sprite
 particle.yy = j;
 }
 }
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead=true
var xx=random_range(x-(sprite_width/2)+(sprite_width/9),x+(sprite_width/2)-(sprite_width/9))
var yy=random_range(y-(sprite_height/2)+(sprite_height/9),y+(sprite_height/2)-(sprite_height/9))
dummy_effect_create(spr_boss_explosion, 0.35, xx, yy, depth-2, 0)
dummy_effect_create(spr_red_glow, 0.35, xx, yy, depth-1, 0);
audio_stop(_boss_hit); 
audio_play(_boss_hit, global.sfx_volume);  
ctr_camera.Camera_ShakeScreen   = true;
ctr_camera.Camera_ShakeDuration = 8;
ctr_camera.Camera_ShakeForce    = 0.5;
with obj_dummy_effect{image_xscale=random_range(0.1,1);image_yscale=image_xscale}
if instance_exists(obj_glow)=false{instance_create(x,y,obj_glow)}
alarm[10]=8
if alarm[9]=-1{alarm[9]=180}

move=false
alarm[0]=-1
alarm[2]=-1
alarm[3]=-1
instance_destroy(obj_miniboss_3_solid)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move=true
hspeed=0
instance_destroy(obj_miniboss_laser)
if dir=0{dir=1}else if dir=1{dir=0}
alarm[0]=120
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=-1
if dir=1{
instance_create(x,y+((sprite_height/2)-9),obj_miniboss_laser)
obj_miniboss_laser.image_index=0}
else if dir=0{
instance_create(x,y-((sprite_height)+24),obj_miniboss_laser)
obj_miniboss_laser.image_index=0}
alarm[3]=120
if hp&gt;2{hspeed=0}else{hspeed=hspeed/1.5}sound=0
start=true


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=20
hspeed=2*sign(obj_character.x-x)
if alarm[2]=-1{alarm[2]=160}
move=false
if sound=0{audio_play(_general_lock_on,global.bgm_volume);sound=1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if start=true{x=clamp(x,obj_boss_camera.x-192,obj_boss_camera.x+192)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hit=false{if alarm[2]=-1{image_speed=0;image_index=0}else{image_speed=((120-alarm[2])/100)}}else{image_speed=0.3}

if (move == true) {
    if dir=0 {
        mp_linear_step(x, 1160, 4, false);
    }
    if dir=1 {
        mp_linear_step(x, 730, 4, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vulnerable == true
{
if hit == false
{

with(other){
  if(state = CS_JUMP or state = CS_ROLL or state = CS_GLIDE or state==CS_SPINDASH or state==CS_FLY){
               angle_to_boss = degtorad(round(wrap_angle(point_direction(x, y, par_boss.x, par_boss.y)-90)/22.5)*24);        
             if(physic_state=0){
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*4;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*3;  
             }else{
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*2;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*1.5;           
             }
             ground        = false;    
            
             if(state == CS_FLY){
                // Check if the vertical speed is way too much:
                   if(y_speed &lt; -3){
                      y_speed = -3;
                   }
             } 
              
  par_boss.hp +=-1;
  par_boss.hit=true;
  audio_play(_boss_hit, global.sfx_volume);  
  par_boss.sprite_index=par_boss.hurt_sprite
    image_speed=0.3
 }else if(state != CS_HURT &amp;&amp; state != CS_DEATH &amp;&amp; !is_cpu){
   angle_to_boss = degtorad(round(wrap_angle(point_direction(x, y, par_boss.x, par_boss.y)-90)/22.5)*24);        
             if(physic_state=0){
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*4;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*3;  
             }else{
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*2;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*1.5;           
             }
             ground        = false;    
   };
  };



}

if hp&lt;1
{
if dead=false{alarm[10]=1}
sprite_index=dead_sprite
}

if hp&gt;0
{
if alarm[11]=-1{alarm[11]=40}
}
}
else
{
with obj_character{character_state_hurt(other, false)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if instance_exists(obj_glow){
d3d_set_fog(true,c_red,0,0);
//draw code
draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_white,obj_glow.image_alpha);
d3d_set_fog(false,c_black,0,0)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
