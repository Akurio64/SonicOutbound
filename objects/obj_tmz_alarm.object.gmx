<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>off=-100
alarm[0]=1
image_alpha=0

//call the particle creation script
//set up the particle system
global.partsys_fire = part_system_create();
part_system_depth(global.partsys_fire,depth-1);

//set up the basic fire particle
global.part_fire = part_type_create();

    //how it looks
    part_type_sprite(global.part_fire,spr_fire,0,0,1);
    part_type_size(global.part_fire,1.5,3,-.05,0);
    part_type_orientation(global.part_fire,0,360,2,0,0);
    part_type_color2(global.part_fire,c_orange,c_red);
    part_type_alpha3(global.part_fire,1,1,0);
    part_type_blend(global.part_fire,1);
    
    //how it moves
    part_type_direction(global.part_fire,5,355,0,0);
    part_type_speed(global.part_fire,2,10,-.1,0);

    //how long it lasts
    part_type_life(global.part_fire,25,35);
    
//set up an extra cinder particle for a nice added effect
global.part_cinder = part_type_create();

    //how it looks
    part_type_sprite(global.part_cinder,spr_cinder,0,0,1);
    part_type_size(global.part_cinder,.5,.75,-.001,0);
    part_type_orientation(global.part_cinder,0,360,.05,0,0);
    part_type_color2(global.part_cinder,c_orange,c_red);
    part_type_alpha3(global.part_cinder,1,1,0);
    part_type_blend(global.part_cinder,1);
    
    //how it moves
    part_type_direction(global.part_cinder,85,125,.01,.01);
    part_type_speed(global.part_cinder,6,8,0,0);

    //how long it lasts
    part_type_life(global.part_cinder,45,75);
    

//set up the particle emitter
my_emitter = part_emitter_create(global.partsys_fire);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_tmz_escape.tou=true{
off+=0.3

//define the emitter region
part_emitter_region(global.partsys_fire,my_emitter,view_xview-96+off,view_xview+96+off,view_yview-240,view_yview+480,ps_shape_rectangle,ps_distr_linear);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=obj_character.x
y=obj_character.y
with par_character
{
if !place_meeting(x,y,obj_tmz_escape){
start=false
if(x_speed &lt; 0)
                              {
                                 x_speed += x_temp_decel;
                                 if(x_speed &gt;= 0)
                                 {                                 
                                    x_speed = 0.5;
                                 }   
                              }
                              else
                              {
                                 if(x_speed &lt; x_speed_top)
                                 {
                                    x_speed += x_temp_accel;
                                    if(x_speed &gt;= x_speed_top)
                                    {
                                       x_speed = x_speed_top;
                                    }
                                 }
                              }}
else{x_speed=lerp(x_speed,18,0.0025);visible=false}
}

//start the particle streams
part_emitter_burst(global.partsys_fire,my_emitter,global.part_fire,10);
part_emitter_burst(global.partsys_fire,my_emitter,global.part_cinder,-5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
