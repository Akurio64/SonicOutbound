<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vulnerable=true;
hp=8
hit=false
dead=false
main_sprite=""
hurt_sprite=""
dead_sprite=""
theme=""
i_speed=""
act_clear=""
image_speed=0.3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop(theme);
ctr_audio.clear_bgm = false;    
audio_play(_boss_destroy, global.sfx_volume);
instance_create(x,y,obj_fade_to_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit=false
sprite_index=main_sprite
ctr_audio.act_clear=act_clear
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vulnerable == true
{
if hit == false
{

with(other){
  if(state = CS_JUMP or state = CS_ROLL or state = CS_GLIDE or state==CS_SPINDASH or state==CS_FLY){
               angle_to_boss = degtorad(round(wrap_angle(point_direction(x, y, par_boss.x, par_boss.y)-90)/22.5)*24);        
             if(physic_state=0){
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*4;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*3;  
             }else{
                x_speed        = sin(wrap_angle(angle_to_boss-angle))*2;
                y_speed        = cos(wrap_angle(angle_to_boss-angle))*1.5;           
             }
             ground        = false;    
            
             if(state == CS_FLY){
                // Check if the vertical speed is way too much:
                   if(y_speed &lt; -3){
                      y_speed = -3;
                   }
             } 
              
  par_boss.hp +=-1;
  par_boss.hit=true;
  audio_play(_boss_hit, global.sfx_volume);  
  par_boss.sprite_index=par_boss.hurt_sprite
    image_speed=0.3
 }else if(state != CS_HURT &amp;&amp; state != CS_DEATH &amp;&amp; !is_cpu){
   character_state_hurt(other, false);
   };
  };



}

if hp&lt;1
{
if dead=false{alarm[10]=1}
sprite_index=dead_sprite
}

if hp&gt;0
{
if alarm[11]=-1{alarm[11]=40}
}
}
else
{
with obj_character{character_state_hurt(other, false)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
