<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hsz_liftor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>par_moving_platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init.
       
 // Call the parent:
    event_inherited()
       
 // X/Y Speed:
    x_spd = 1;
    y_spd = 0;
    
 // Character Y offset. Default set at 10, you might need to tweak this for other platforms.
    platform_offset = 5; 
    lower           = true;
    lower_y         = 6;
    lower_yspd      = 0.15;
    x_diracc        = 0.15;
    y_diracc        = 0.25;    
    horz_speed      = 1;
    vert_speed      = 1;
    ang_radius = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement &amp; Player position.

 // Active. 
    if(active == false)
    {
       if(in_view() == true)
       {
          active = true;
       }
    }
    
 // Only run IF active:
    if(active == false) exit;
    
 // Set Horizontal and vertical speeds:
    ang_radius +=3
    y = ystart+lengthdir_y(y_spd*6,ang_radius)
    x = xstart+lengthdir_x(x_spd*6,ang_radius)
    
 // Floor Position:   
    x = floor(relative_x+x_speed);
    y = floor(relative_y+y_speed+lower_yact); 
    
 // Update player position.
    _main_char = obj_character;
    _cpu_char  = obj_ai;
    if(instance_exists(_main_char))
    {
       if(_main_char.ground == true &amp;&amp; _main_char.platform_id == id &amp;&amp; _main_char.state != CS_DEATH)
       {
          _main_char.x += (x-previous_x);
          _main_char.y  = ((y-sprite_yoffset)-(platform_offset));
          if(lower == true)
          {
             if(lower_yact &lt; lower_y)
             {
                lower_yact += lower_yspd;
             }
             if(lower_yact &gt; lower_y)
             {
                lower_yact = lower_y;
             }             
          }          
       }
       else
       {
          if(lower == true)
          {
             if(lower_yact &gt; 0)
             {
                lower_yact -= lower_yspd;
             }
             if(lower_yact &lt; 0)
             {
                lower_yact = 0;
             }
          }
       }
    }
    else
    {
      if(lower == true)
      {
         if(lower_yact &gt; 0)
         {
            lower_yact -= lower_yspd;
         }
         if(lower_yact &lt; 0)
         {
            lower_yact = 0;
         }
      }    
    }
 
 // Same but for AI
    if(instance_exists(_cpu_char))
    {
       if(_cpu_char.ground == true &amp;&amp; _cpu_char.platform_id == id &amp;&amp; _cpu_char.state != CS_DEATH)
       {
          _cpu_char.x += (x-previous_x);
          _cpu_char.y  = ((y-sprite_yoffset)-(platform_offset));
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
