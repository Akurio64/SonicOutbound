<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hsz_turtle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_badnik_grounded</parentName>
  <maskName>spr_hsz_turtle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Get common variables from parent:
    event_inherited();
 
 // Set horizontal speed.
    x_speed = -1;
    
 // Animation:
    sprite           = sprite_index;
    variant          = 1
    sprite_direction = -1;
 
 // Badnik variables.
    turn_timer = -1;
    leg_r      = 0
    leg_l      = 0
    body_y     = 0
    leg_change = 0
    a          = true
    fade       = 0
    alarm[0]=1
    alarm[1]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade!=0{

with(instance_create(x+8*sprite_direction, y-24, obj_hsz_turtle_bomb))
    {
         hspeed=instance_nearest(x,y,obj_hsz_turtle).hspeed*3
    }}
    alarm[1]=90
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed=1.5*sprite_direction
friction=0.15
if place_meeting(x,y,obj_badnik_block)=false{a=true}
alarm[0]=45

if leg_change=0{leg_change=1}else if leg_change=1{leg_change=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement. (Overwrite from parent)
 
 // Only run if in view.
    if(in_view())
    {

// Vertical:
    repeat(abs(y_speed))
    {
           if not(place_meeting(x, y+sign(y_speed), par_solid)
           ||(y_speed &gt;= 0 &amp;&amp; place_meeting(x, y+sign(y_speed), par_platform) &amp;&amp; !place_meeting(x, y, par_platform)))
           {
              y += sign(y_speed);
           }
           else
           {
              y_speed = 0;
           }
    }
    if(ground == false)
    {
       y_speed += y_gravity;
       if(y_speed &gt; 12)
       {
          y_speed = 12;
       }
    }
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if leg_change = 0
    {
        leg_r=abs(3*hspeed)
        }else
    {
    leg_l=abs(3*hspeed)
    }
    
    body_y=abs(1*hspeed)
    
    if distance_to_object(par_character)&lt;96
        {
            if fade&lt;1{fade+=0.02}
            }
            else{if fade&gt;0{fade-=0.02}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_badnik_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if a=true{sprite_direction=-sprite_direction;a=false}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw badnik.
 
    draw_sprite_ext(spr_hsz_turtle_legs, 0, floor(x), floor(y)-leg_l, sprite_direction, 1, 0, c_white, fade);
    draw_sprite_ext(spr_hsz_turtle_legs, 1, floor(x), floor(y)-leg_r, sprite_direction, 1, 0, c_white, fade);
    
    draw_sprite_ext(sprite, 0, floor(x), floor(y)-body_y, sprite_direction, 1, 0, c_white, fade);
    draw_sprite_ext(sprite, 1, floor(x), floor(y)-body_y, sprite_direction, 1, 0, c_white, fade);
    
    draw_sprite_ext(spr_hsz_turtle_legs, 2, floor(x), floor(y)-leg_r, sprite_direction, 1, 0, c_white, fade);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
