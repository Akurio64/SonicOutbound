<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slz_fan_bad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_badnik</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Get common variables from parent:
    event_inherited();
 
 // Set horizontal speed.
    x_speed = -1;
    
 // Animation:
    sprite           = spr_slz_fan_bad;
    sprite_speed     = 0.12;
    sprite_direction = -1;
    
 //Variables
    hand_a=0
    broken=true
    dir=1
    
    wind=instance_create(x,y,obj_slz_wind)
    wind.image_xscale=sprite_direction
    force=0.5
    on=1
    timer=-1
    alarm[0]=1
    
    /// Variables.
 
 // Movement Variables:
    x_speed       = 0;       // The horizontal speed.
    y_speed       = 0;       // The vertical speed.
    y_gravity     = 0.21875; // Gravity. 

 // Reset Variables:
    x_reset = xstart; // The (X) position when resetting. (If offscreen)
    y_reset = ystart; // The (Y) position when resetting. (If offscreen)
    
 // Collision variables:
    ground = false; // Check if the object is grounded.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if on=1{on=0}else if on=0{on=1}
alarm[1]=timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wind.x=x-(32*sprite_direction)
alarm[1]=timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Vertical:
    repeat(abs(y_speed))
    {
           if not(place_meeting(x, y+sign(y_speed), par_solid)
           ||(y_speed &gt;= 0 &amp;&amp; place_meeting(x, y+sign(y_speed), par_platform) &amp;&amp; !place_meeting(x, y, par_platform)))
           {
              y += sign(y_speed);
           }
           else
           {
              y_speed = 0;
           }
    }
    if(ground == false)
    {
       y_speed += y_gravity;
       if(y_speed &gt; 12)
       {
          y_speed = 12;
       }
    }
    
    if place_meeting(x,y,obj_badnik_block)
        {
            hspeed=0
            }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if grounded.

    if(place_meeting(x, y+sign(y_speed), par_solid)
    ||(y_speed &gt;= 0 &amp;&amp; place_meeting(x, y+sign(y_speed), par_platform) &amp;&amp; !place_meeting(x, y, par_platform)))
    {
       ground = true;
    }
    else
    {
       ground = false;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _diff = angle_difference(-hspeed*20, hand_a);
hand_a += _diff * 0.1;

force=hspeed/8
               
//Behaviour

sprite_direction=-dir
dir = sign(x-par_character.x)

if distance_to_object(par_character)&lt;128
    {
        
        if dir=1
            {
                if hspeed&gt;-4
                    {
                        hspeed-=0.05*dir
                        }
                    }
                else if dir=-1
                    {
                        if hspeed&lt;4
                            {
                                hspeed-=0.05*dir
                                }
                            }
                            broken=false
                        }
                    else
                        {
                            hspeed=0
                            broken=true
                            }
                            
sprite_speed=(force/2)*on

with wind
{
if place_meeting(x,y,par_character)
{
with instance_nearest(x,y,par_character)
{
x_speed+=(instance_nearest(x,y,obj_slz_fan_bad).force)*(instance_nearest(x,y,obj_slz_fan_bad).on*1.5)
}
}
x=instance_nearest(x,y,obj_slz_fan_bad).x
y=instance_nearest(x,y,obj_slz_fan_bad).y-16
}
wind.image_xscale=sprite_direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw badnik.
 
    draw_sprite_ext(spr_slz_fan_bad_hand, 1, floor(x)+13*sprite_direction, floor(y), sprite_direction, 1, hand_a-90*sprite_direction, c_white, 1);
    draw_sprite_ext(sprite, floor(image_index), floor(x), floor(y), sprite_direction, 1, 0, c_white, 1);
    draw_sprite_ext(spr_slz_fan_bad_hand, 0, floor(x)-13*sprite_direction, floor(y), sprite_direction, 1, hand_a-90*sprite_direction, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
