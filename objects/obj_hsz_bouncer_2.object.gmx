<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hsz_bouncer_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
image_speed=0
hp=3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Explode.
                                
 // Dummy Effect:
    var xx;
        xx = (x-sprite_get_xoffset(sprite_index)+(sprite_get_width(sprite_index)/2));
    var yy;
        yy = (y-sprite_get_yoffset(sprite_index)+(sprite_get_height(sprite_index)/2));
    dummy_effect_create(spr_badnik_explosion, 0.35, xx, yy, -5, 0);
    dummy_effect_create(spr_red_glow, 0.35, xx, yy, 5, 0);
    instance_create(x,y,obj_enemy_part)
    
              
 // Add Score:
    global.cscore += score_multiplier(true, xx, yy); 
        
 // Play Sound:
    audio_play(_general_destroy, global.sfx_volume);       
    
ctr_camera.Camera_ShakeScreen   = true;
ctr_camera.Camera_ShakeDuration = 20;
ctr_camera.Camera_ShakeForce    = 1;

/* Debris */
pro_r = instance_create(x+15,y-3,obj_badnik_debris);
pro_l = instance_create(x-15,y-3,obj_badnik_debris);
pro_r2 = instance_create(x+15,y-3,obj_badnik_debris);
pro_l2 = instance_create(x-15,y-3,obj_badnik_debris);

with(pro_r)
{
gravity = 0.3;
hspeed = 1.5;
vspeed = -3;
};

with(pro_l)
{
gravity = 0.3;
hspeed = -1.5;
vspeed = -3;
};

with(pro_r2)
{
gravity = 0.3;
hspeed = 0.5;
vspeed = -5;
};

with(pro_l2)
{
gravity = 0.3;
hspeed = -0.5;
vspeed = -5;
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed=clamp(hspeed,-3,3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x&lt;obj_character.x{
hspeed+=0.1}
else if x&gt;obj_character.x{
hspeed-=0.1}

if !place_meeting(x, y + 1, par_terrain)
   {
   gravity = 0.25;
   }
else
   {
   if vspeed&gt;0{
   vspeed = 0;
   }
   gravity = 0;
   inv=false
   }

 if place_meeting(x,y,par_terrain){
   y-=1;
   }
   
image_angle=xstart-(x*(360/(pi*sprite_width)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp&gt;0{
par_character.x_speed=-par_character.x_speed
hspeed=-hspeed
hp-=1}
else{instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
