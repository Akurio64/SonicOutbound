<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slz_trundull</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_badnik</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>broken=false
dir=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravity

if !place_meeting(x, y + 1, par_terrain)
   {
        gravity = 0.1;
        }
    else
        {
            if vspeed&gt;0
                {
                    vspeed = 0;
                    }
            gravity = 0;
            }

        if place_meeting(x,y,par_terrain)
            {
               y-=1;
               }
               
//Behaviour

image_xscale=dir

if distance_to_object(par_character)
    {
        dir = sign(par_character.x-x)
        }

if dir=1
    {
        if hspeed&lt;4
            {
                hspeed+=0.01*dir
                }
            }
        else if dir=-1
            {
                if hspeed&gt;-4
                    {
                        hspeed-=0.01*dir
                        }
                    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if broken=false
    {
        with par_character
            {
                // Getting hurt.
                    if not (state == CS_FLY &amp;&amp; y_speed &lt; 0)
                            if(state != CS_JUMP &amp;&amp; state != CS_ROLL &amp;&amp; state != CS_SPINDASH &amp;&amp; state != CS_HURT &amp;&amp; state != CS_GLIDE &amp;&amp; state != CS_SLIDE &amp;&amp; state != CS_TORNADO &amp;&amp; state != CS_MEGA)
                            {
                               if(invincibility == 0)
                               {
                                  var badnik;
                                  badnik = character_collision_check(COL_MAIN_OBJECT, x, y, par_badnik);
                                  if(badnik != noone)
                                  {
                                    character_state_hurt(badnik, false);
                                  }
                               }
                    }
                 
                 // Hurting badnik:
                    if(state == CS_JUMP || state == CS_ROLL || state == CS_SPINDASH || state == CS_FLY || state == CS_GLIDE || state == CS_SLIDE || invincibility == 2 || shield_state == 1 || state == CS_TORNADO || state == CS_MEGA)
                    {
                       var badnik;
                           badnik = character_collision_check(COL_MAIN_OBJECT, x, y, par_badnik);
                        if(badnik != noone)
                        {
                           if((state == CS_JUMP &amp;&amp; y_speed &gt; 0) || (state == CS_ROLL &amp;&amp; y_speed &gt; 0) || (invincibility == 2 &amp;&amp; y_speed &gt; 0))
                           {
                              // Destroy badnik:
                                 with(badnik)
                                 {
                                      broken=true
                                 }
                                 
                              // Rebound:
                                 y_speed       *= -0.5;
                                 ground         = false;
                                 if(roll_rebounce == false)
                                 {
                                    jump_completed  = false;
                                 }
                                 
                             // Reset bubble shield:
                                if(shield_index == SHIELD_BUBBLE &amp;&amp; shield_state &gt; 0)
                                {
                                   shield_state  = 0;
                                   shield_usable = true;
                                   shield_object . shield_sprite = spr_shield_bubble;
                                }
                           }
                           else if((state == CS_JUMP &amp;&amp; y_speed &lt;= 0) || (state == CS_ROLL &amp;&amp; y_speed &lt;= 0) || (state == CS_FLY &amp;&amp; y_speed &lt; 0) || state == CS_SPINDASH || state == CS_GLIDE || state == CS_SLIDE || invincibility == 2 || state == CS_TORNADO || state == CS_MEGA)
                           {
                                    with(badnik)
                                    {
                                         broken=true
                                    }
                                    if(y_speed &lt;= 0 &amp;&amp; !ground)
                                    {
                                       y_speed -= 0.5;
                                    }
                           }
                        }
                    }
                 }
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Body
draw_sprite(sprite_index,0,x,y)

//Wheels
if broken = true
    {
        draw_sprite(sprite_index,2,x,y)
        draw_sprite(sprite_index,3,x,y)
        }
    
    else
        {
            draw_sprite(sprite_index,1,x,y)
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
