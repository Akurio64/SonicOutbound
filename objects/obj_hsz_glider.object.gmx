<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hsz_glider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = 0
hspeed = 0
gravity = 0
off = 0
image_blend = c_white
image_alpha = 1
image_xscale = 1

triggered=false;
canbetriggered=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if triggered=true
{
    if (vspeed &gt; 0)
        image_angle=lerp(image_angle,-10,0.25)
    else
        image_angle=lerp(image_angle, 10,0.25)
    image_speed = (0.2)
    if ((par_character.input_up_pressed == true) &amp;&amp; y &gt; 20)
        vspeed -= (2)
    if place_free(x, (y + 1))
        gravity = ((0.1))
    else
        gravity = 0
    if (vspeed &gt; (1.5))
        vspeed = (1.5)
    if (vspeed &lt; (-3))
        vspeed = (-3)
    if (image_xscale == 1)
    {
        if (hspeed == 0)
            hspeed = (1)
        if (hspeed &gt; (-1) &amp;&amp; hspeed &lt; (3))
            hspeed += (0.02)
    }
    if (image_xscale == -1)
    {
        if (hspeed == 0)
            hspeed = (-1)
        if (hspeed &gt; (-3))
            hspeed -= (0.02)
    }
    
    if (((x - 9) + hspeed) &lt; view_xview[0] || ((x + 6) + hspeed) &gt; (view_xview[0] + view_wview[0]))
    {
        hspeed = 0
        off = 1
    }
    if (((x + 9) + hspeed) &lt;= 9 || (x + hspeed) &gt;= (room_width - 9))
    {
        hspeed = 0
        off = 1
    }
    
    if ((!(place_free((x + hspeed), (y + vspeed)))) &amp;&amp; (!(place_meeting((x + hspeed), y, par_solid))))
    {
        vspeed = 0
        off = 1
    }
    if ((!(place_free(x, (y + vspeed)))) &amp;&amp; place_meeting((x + hspeed), y, par_solid))
    {
        vspeed = 0
        off = 1
    }
    if ((place_meeting((x + hspeed), y, par_solid) &amp;&amp; (!(place_meeting((x + hspeed), y, par_solid)))) || place_meeting((x + hspeed), y, par_solid))
    {
        if (speed &gt; 0)
            hspeed -= hspeed
        off = 1
    }
    if (place_meeting(x, (y + (vspeed / 2)), par_solid) &amp;&amp; (!(place_meeting((x + hspeed), y, par_solid))))
    {
        while (vspeed &lt; 0)
            vspeed = 0
        off = 1
    }
    if (((x - 9) + hspeed) &lt; view_xview[0] || ((x + 6) + hspeed) &gt; (view_xview[0] + view_wview[0]))
    {
        hspeed = 0
        off = 1
    }
    if (((x + 9) + hspeed) &lt;= 9 || (x + hspeed) &gt;= (room_width - 9))
    {
        hspeed = 0
        off = 1
    }
}
else{
vspeed = 0
hspeed = 0
gravity = 0
off = 0}

if triggered==true
{
par_character.x=floor(x)
par_character.y=floor(y);
par_character.x_speed=0;
par_character.y_speed=0;
if par_character.state!=CS_HANG{
par_character.state=CS_HANG
par_character.hang="GLIDER"}
par_character.input_lock_l=1
par_character.animation_angle=image_angle+10

if (par_character.input_action_pressed == true)
{
triggered=false;
canbetriggered=false;
par_character.state=CS_ROLL;
par_character.ground=false;
par_character.y_speed=-4;
par_character.x_speed=4*par_character.animation_direction
audio_play(_char_jump,global.sfx_volume)
}

}


if canbetriggered==false 
{
if instance_exists(par_character)
{
if par_character.ground==true{
canbetriggered=true;
}
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.is_cpu==false{if canbetriggered=true &amp;&amp; other.state!=CS_DEATH &amp;&amp; other.state!=CS_HURT{triggered=true;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite_ext(spr_hsz_glide_hang,0,x,y,1,1,image_angle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
