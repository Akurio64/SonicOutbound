<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cgs2021_splashscreen_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation           = 0;


icon_hsize          = 0;
icon_spin_count     = 0;
icon_spin_speed     = 0;


emblem_index        = 0;
emblem_size         = 10;

emblem_index2       = 0;
emblem_size2        = 0;
emblem_rot2         = 0;


_sin                = 0;


star_speed          = 0;
star_rot            = 0


text_size           = 0;


screen_alpha        = 0;
screen_check        = false;

alarm[0] = -1;
alarm[1] = -1;
audio_play_sound(snd_cgs2021_appear, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_cgs2021_zoom)
audio_play_sound(snd_cgs2021_zoom, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screen_check++;
alarm[0] = 1.8*room_speed;
alarm[1] = 1.8*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if emblem_size &gt; 1
    emblem_size -= 0.8
else if animation == 0
{
    animation = 1;
    emblem_size = 1;
    
}

if animation == 1
{
    animation = 2;
    audio_play_sound(snd_cgs2021_land, 1, 0);
}

if animation == 2
{

    background_y[0] -= 2/EaseInExpo(icon_spin_speed, 0.5, 1, 98);
    background_y[1] -= 2/EaseInExpo(icon_spin_speed, 0.5, 1, 98);
    
    if text_size &lt; 40 and icon_spin_speed &gt; 85
        text_size++;
    
    if text_size &gt;= 36
        emblem_index = 2;
    else if icon_hsize &gt;= 0
        emblem_index = 0;
    else
        emblem_index = 3;
        
    if abs(icon_hsize) &lt;= 0.14
    {
        audio_stop_sound(snd_cgs2021_flip);
        audio_play_sound(snd_cgs2021_flip, 1, 0);
    }
        
    if icon_spin_speed &lt; 98 and emblem_size &gt;= 1
    {
        icon_spin_speed++;
        icon_hsize = -sin(_sin);
        _sin += (pi*2)/(60*EaseInExpo(icon_spin_speed, 0.25, 4, 98));
    }
    else
        icon_hsize = approach(icon_hsize, 1, 0.01);
    
    if(_sin &gt; pi*2)
        _sin = 0;
    
    if text_size &gt; 5
    {
        star_speed += 6;
        star_rot+=16;
    }
        
    if text_size == 39
        alarm[0] = 0.6*room_speed;
    if text_size == 1
    {
        audio_play_sound(snd_cgs2021_textland, 1, 0);
        audio_play_sound(snd_cgs2021_endlighttheme, 1, 0);
    }
    
    if screen_check == 1
    {
        if emblem_index2 &lt; 12
            emblem_index2 += .8;
        else
            emblem_index2 = 12;
    }

    if screen_check == 2
    {
        if emblem_rot2 &lt; 20
            emblem_rot2++;
        
        if emblem_size2 &lt; 16
            emblem_size2++;
        
        if emblem_size2 &gt; 10
            screen_alpha += 0.2;
    }
    
    if screen_alpha &gt; 3
        if room_next(room) != -1
            room_goto_next();
        else
            room_goto(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if screen_check == false
{
    draw_sprite_ext(spr_cgs2021_splashscreen_light, emblem_index, room_width/2, room_height/2, icon_hsize+emblem_size-1, emblem_size, 0, c_white, 1);
    
    if text_size &gt; 5
    {
        for(i=1; i&lt;15; i++)
        {
            draw_sprite_ext(spr_cgs2021_starsA, i, room_width/2+lengthdir_x(star_speed, 25*i), 
                        room_height/2+lengthdir_y(star_speed, 25*i), 1, 1, star_rot-2*i, c_white, 1);
        }
        
        for(i=1; i&lt;15; i++)
        {
            draw_sprite_ext(spr_cgs2021_starsB, i, room_width/2+lengthdir_x(star_speed/1.2, 50*i), 
                    room_height/2+lengthdir_y(star_speed/1.2, 50*i), 1, 1, star_rot-2*i, c_white, 1);
        }
    }
    
    draw_sprite_ext(spr_cgs2021_splashscreen_light, 1, room_width/2, room_height/2, EaseOutElastic(text_size, 0, 100, 40)/100, 
                                                                EaseOutElastic(text_size, 0, 100, 40)/100, 0, c_white, 1);
}
else if screen_check &gt;= 1
{
    draw_sprite_ext(spr_cgs2021_splashscreen_shine_light, emblem_index2, room_width/2, room_height/2, EaseInBack(emblem_size2, 1, 12, 16), 
                                                                        EaseInBack(emblem_size2, 1, 12, 16), emblem_rot2, c_white, 1);
}

    draw_set_colour(make_colour_rgb(3, 0, 59));
    draw_set_alpha(screen_alpha);
draw_rectangle(0, 0, room_width, room_height, false)
    draw_set_colour(c_white);
    draw_set_alpha(image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
